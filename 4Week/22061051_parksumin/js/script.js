/*
문제 풀이.
*/

/*
Quest 1.
1. compareNumbers 라는 함수를 선언하고, 2개의 매개변수(숫자 타입)를 지정합니다.
2. 조건1 : 1(순서) 함수가 호출될 때, 두번째 매개변수의 전달인자 값이 할당되지 않은 경우, 아래와 같은 문자열로 console 에 출력되도록 작성합니다.
----------
두번째 매개변수의 값을 찾을 수 없습니다.
----------
3. 값이 할당된 경우 4(순서)에 이어서 작성합니다.
4. 조건2 : 첫번째 매개변수의 전달인자 값과 두번째 매개변수의 전달인자 값을 비교하여 크거나 같은 경우, 아래와 같은 문자열로 console 에 출력되도록 작성합니다.
----------
첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 크거나 같습니다.
----------
5. 작은 경우 아래와 같은 문자열로 console 에 출력되도록 작성합니다.
----------
첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 작습니다.
----------
6.  1(순서) 함수에 각 매개변수를 지정하여 호출합니다.
 
----------
함수 호출)

compareNumbers(10) 을 호출한 경우 : "두번째 매개변수의 값을 찾을 수 없습니다."

compareNumbers(20, 10) 을 호출한 경우 : "첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 크거나 같습니다."

compareNumbers(10, 20) 을 호출한 경우 : "첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 작습니다."
----------
*/
// Answer 1.

//조건과 문제를 혼동해 많이 헷갈렸던 문제입니다.

compareNumbers(10); // 두번째 매개변수의 값을 찾을 수 없습니다.
compareNumbers(20, 10); // 첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 크거나 같습니다.
compareNumbers(10, 20); // 첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 작습니다.

function compareNumbers(a,b) { // 괄호 안에 매개변수를 입력하는 형식 간단히 a 와 b를 설정했습니다
    if (typeof b == "undefined") { // if 문을 사용해 식을 작성해 나간다. typeof 연산자를 사용했을 경우 변수가 정의되지 않거나 값이 없을때 "undefined" 사용해준다. 첫번째 문제는 값을 찾을 수 없다고 하니 typeof 연산자의 undefined를 써준다.
        console.log("두번째 매개변수의 값을 찾을 수 없습니다.")
    }// 이부분에서 두번째 ~값이 아닌 첫번째~ 크거나 같습니다 라는 답이 나와 계속 고민을 했었는데 알고보니 a와 b를 바꿔 적었었습니다. 
    else if (a >= b) {
        console.log("첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 크거나 같습니다.")
    }
    else {
        console.log("첫번째 매개변수에 할당된 전달인자의 값이 두번째 매개변수에 할당된 전달인자의 값보다 작습니다.")
    }//이 부분은 앞의 두가지 조건이 아닌경우 그 나머지를 의미하니 범위를 적지 않고 else로 적어줍니다.
}

/*
Quest 2.
1. getTotal 이라는 함수를 선언하고, 2개의 매개변수(첫번째는 숫자 타입, 두번째는 문자 타입)를 지정합니다.
2. 조건 1-1 : 1(순서) 함수가 호출될 때, 두번째 매개변수의 전달인자 값이 "add" 인 경우, 숫자 1 부터 첫번째 매개변수의 전달인자 값까지 모두 덧셈 연산하여 결과값을 반환합니다.
3. 조건 1-2 : 1(순서) 함수가 호출될 때, 두번째 매개변수의 전달인자 값이 "multiply" 인 경우, 숫자 1 부터 첫번째 매개변수의 전달인자 값까지 모두 곱셈 연산하여 결과값을 반환합니다.
4. 조건 1-3 : 1(순서) 함수가 호출될 때, 모든 조건(1-1, 1-2)이 아닌 경우, 결과값 숫자 0 을 반환합니다.
5. 새로운 변수를 생성, 1(순서) 함수에 매개변수를 지정하여 호출하고 값을 반환받습니다.
6. 5(순서) 변수의 값을 console 에 출력합니다.

----------
함수 호출 예시)

getTotal(5, "add") 를 호출하여 반환하고 변수를 출력한 결과값 : 15

getTotal(10, "add") 를 호출하여 반환하고 변수를 출력한 결과값 : 55

getTotal(5, "multiply") 를 호출하여 반환하고 변수를 출력한 결과값 : 120

getTotal(10, "multiply") 를 호출하여 반환하고 변수를 출력한 결과값 : 3628800

getTotal(100) 를 호출하여 반환하고 변수를 출력한 결과값 : 0
----------
*/
// Answer 2.

function getTotal (num1, string) { //첫번째 문제에서는 둘다 숫자라 그냥 알파벳으로 사용했지만 이번에는 숫자와 문자라 구분하기 쉽게 num과 string을 사용했습니다.
    //getTotal 이라는 함수 선언과 2개의 매개변수 첫번째는 숫자, 두번째는 문자
    //사실 이 문제를 나중에 풀어서 아래에 이미 num이라는 변수가 선언되어있습니다. 중복되지않도록 1을 뒤에 붙였습니다.
    if (string === "add") { //두번째 매개변수의 전달인자 값이 "add" 인 경우! 첫번째 문제에서 했던 실수를 하지 않도록 이번에는 혼동하지 않고 *두번째*인 string을 적어줬습니다.
        var sum = 0; //*모두 덧셈!하여 연산을 하라고 했으니 *sum*을 사용합니다.
        for (var i = 1; i <= num1; i++){ //1부터 더하라고 나와있기 때문에 1로 잡아줍니다. 여기서 제대로 안읽고 0으로 했다가 큰일이 났었습니다.
            sum += i;
        }
        return sum; //반환!! return을 사용해줍니다.
    }
    else if (string === "multiply") { //두번째 매개변수의 전달인자 값이 "multiply" 인 경우!
        var mul = 1; //곱하기인 *mul*을 사용해줍니다!
        for (var i = 1; i <= num1; i++){ //매개변수의 전달인자 값까지 *모두* 곱셈하러 했기때문에 작거나 *같다!!*로 적어줍니다.
            mul *= i;
        }
        return mul; //여기도 return 사용!
    }
    else if (string !== "add" && string !== "multiply"){ //마지막은 위 두가지의 조건이 둘다 아닐경우입니다!
        return 0; //0을 return한다 했으니 0을 적어줍시다.
    }
}

var result; //결과값 변수를 생성합니다. 편하게 result로 합니다.
result = getTotal(1, "add");//getTotal로 함수 선언을 해준것을 잊지맙시다. 여기서도 이름 찾다가 시간을 많이 날렸습니다...
console.log(result); // 1
result = getTotal(2, "add");
console.log(result); // 3
result = getTotal(1, "multiply");
console.log(result); // 1
result = getTotal(2, "multiply");
console.log(result); // 2
result = getTotal(3);
console.log(result); // 0
//숫자는 편하게 1과 2, 3으로 넣었습니다.

/*
Quest 3.
1. var _cars = ['Tesla', 'Audi', 'Volvo', 'Benz'];
2. _cars 배열의 문자열 원소를 아래 결과와 같은 문자열로 console 에 출력되도록 작성합니다.

----------
문자열 출력)

Benz, Volvo, Audi, Tesla.
----------
*/
// Answer 3.
var _cars = ['Tesla', 'Audi', 'Volvo', 'Benz'];
_cars.unshift('Tesla');
console.log(_cars);
_cars.unshift('Audi');
console.log(_cars);
_cars.unshift('Volvo');
console.log(_cars);
_cars.unshift('Benz');
console.log(_cars);
_cars.pop('Benz');
console.log(_cars);
_cars.pop('Volvo');
console.log(_cars);
_cars.pop('Audi');
console.log(_cars);
_cars.pop('Tesla');
console.log(_cars);
//이렇게 하나하나 순서를 바꾸면서 작성해도 답은 출력이 되긴 합니다!
//하지만 최대한 간단하게 식을 계산하기 위해 reverse를 사용해줍시다.ㅠㅠ
//또한 과정들이 전부 나와있어 콘솔창이 매우 길어집니다...
var _cars = ['Tesla', 'Audi', 'Volvo', 'Benz'];
_cars.reverse(); //reverse를 사용하면 반대가 됩니다.
console.log(_cars); //이렇게하면 한줄안에 깔끔하게 콘솔창에 나오게 됩니다.

/*
Quest 4.
1. searchIndex 라는 함수를 선언하고, 2개의 매개변수(첫번째는 배열, 두번째는 숫자) 를 지정합니다.
2. 1(순서) 함수에 전달된 첫번째 매개변수 배열의 원소들과 두번째 매개변수의 숫자를 비교하여(반복문, 조건문 사용), 일치할 경우 배열의 index(원소 순서) 를 console 에 출력하도록 작성합니다.
3. 1(순서) 함수에 각 매개변수를 지정하여 호출합니다.

----------
함수호출 예시)

searchIndex([8, 10, 13, 30, 50], 30) 를 호출한 경우 : 3
----------
*/
// Answer 4.

function searchIndex(arr, num) { //searchIndex라는 함수 선언! 배열을 나타내는 단어 arr, 숫자를 나타내는 단어 num를 사용해줍니다! 첫번째 문제에서는 둘다 숫자라 그냥 알파벳으로 사용했지만 이번에는 배열과 숫자라 구분하기 쉽게, 또한 조건문이 들어가있어 arr과 num를 사용했습니다. 
    for (i = 0; i < arr.length; i++) { //반복문과 조건문을 사용해 작성합니다. i의 값이 범위에 도달할때까지 계속 더해줍니다.
        if (arr[i] === num) {
            console.log(i); 
    }
}
}
//여기서 빨간줄이 뜨면서 콘솔창 입력이 안되길래 당황했는데 알고보니 중괄호 하나를 안닫아주었습니다.....
searchIndex([1, 10, 100, 1000, 2000], 1000); //  3/ 범위에 도달했고 0부터 시작했으니 3이 답입니다.

/*
Quest 5.
1. checkType 이라는 함수를 선언하고, 1개의 매개변수(배열)를 지정합니다.
2. 1(순서) 함수에 전달된 매개변수 배열의 원소들의 데이터 타입을 원소로 가지는 새로운 배열을 생성하여(반복문 사용) console 에 출력합니다.
3. 1(순서) 함수에 매개변수를 지정하여 호출합니다.

----------
함수호출 예시)

checkType([10, 'Hello', 'World', {name : 'rh'}, [10, 20]]) 를 호출한 경우
: ['number', 'string', 'string', 'object', 'object']
----------
*/
// Answer 5.
var arr = []; //편한게 배열 arr로 작성합니다.
function checkType (arr1){ //checkType이라는 함수를 선언하라 했으니 다른 단어들을 적지말고 그대로 적어줍시다. 또한 매개변수 arr1을 적어줍시다. 
    for(i= 0; i < arr1.length; i++){ //항상 해왔듯이 0으로 지정해주고 arr.length, i++를 적어줍니다. 특정한 조건이 없으니 이대로 적어줍니다.
        arr.splice(i, 0, typeof arr1[i]);//여기서 약간 실수한 점이 arr과 arr1 구분을 제대로 못 해서 계속 "undefined"단어가 떴었습니다. 하지만 많은 수정 끝에 정상적으로 값이 나옵니다ㅠㅠ
    }
    console.log(arr);
}
checkType([10, 'Hello', 'World', {name : 'rh'}, [10, 20]]); //제대로 답이 나옵니다!



/*
Quest 6.
1. getMaxValue 이라는 함수를 선언하고, 1개의 매개변수(배열 타입)를 지정합니다.
2. 1(순서) 함수에 전달된 매개변수 배열 원소들의 숫자 값들을 비교하여 숫자가 가장 큰 경우, 1(순서) 배열에서 해당된 순서를 결과값으로 반환합니다.
3. 새로운 변수를 생성, 1(순서) 함수에 매개변수를 지정하여 호출하고 값을 반환받습니다.
4. 3(순서) 변수의 값을 console 에 출력합니다.
* 매개변수 배열에는 숫자 이외의 타입도 할당되어 있습니다.

----------
함수 호출 예시)

getMaxValue([10, -4, 7, 100, "hello", -50]) 를 호출하여 반환하고 변수를 출력한 결과값 : 3

getMaxValue([-400, "world", 60, 0, {}, 1000]) 를 호출하여 반환하고 변수를 출력한 결과값 : 5
----------
*/
// Answer 6.

var _arr = []; //그동안 arr, arr1,...이런 변수들을 많이 써왔으니 구분을 위해 _arr로 해줍니다. 
var _arr1; //알아보기 쉽게 _arr시리즈로 적었습니다.
var _arr2 = 0;

// function getMaxValue(_arr) //getMaxValue 함수를 선언합니다! _arr을 적어야 하는데 또 이상하게 _arr1들을 적어서 식이 다 꼬였었습니다ㅜ...
// {
//     for(i = 0; i < _arr.length; i++) //특정 조건이 없으니 0부터 시작, 같다라는 말이 없으니 작다 부등호만 적어줍니다. ++도 적어줍시다.
//     {
//         if(typeof _arr[i] === 'number') //이 경우는 숫자일때 입니다. 예시? 문제에 *숫자 이외의 타입도 할당되어있다고* 한 점을 유의해 줍니다. 아래 식에는 문자도 있으니 추가로 string도 만들어 줍시다.
//         {
//             if(_arr2 < _arr[i]) 
//             {
//                 _arr2 = _arr[i];
//                 _arr1 = i; 
//             }
//         }
//     }
//     console.log(_arr1);
// }
// getMaxValue([10, -4, 7, 100, "hello", -50]) //3
// getMaxValue([-400, "world", 60, 0, {}, 1000]) //5

//문자 타입일 경우
function getMaxValue(_arr) //getMaxValue 함수를 선언합니다! _arr을 적어야 하는데 또 이상하게 _arr1들을 적어서 식이 다 꼬였었습니다ㅜ...
{
    for(i = 0; i < _arr.length; i++) //특정 조건이 없으니 0부터 시작, 같다라는 말이 없으니 작다 부등호만 적어줍니다. ++도 적어줍시다.
    {
        if(typeof _arr[i] === 'string') //이 경우는 문자일때 입니다.
        {
            if(_arr2 < _arr[i]) 
            {
                _arr2 = _arr[i];
                _arr1 = i; 
            }
        }
    }
    console.log(_arr1);
}
getMaxValue([10, -4, 7, 100, "hello", -50])
getMaxValue([-400, "world", 60, 0, {}, 1000])
//문자일때는 undefined가 나옵니다....어디서 틀린건지는 잘 모르겠습니다.ㅜㅜ 아마도 'number'와 'string'자리만 바꾸면 문제가 해결 될거라고 생각을 했는데 그것이 아니었나 봅니다.
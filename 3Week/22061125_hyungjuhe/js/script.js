// ### Quest 1.
// 1) 변수를 선언하고 숫자 '29' 를 할당합니다.
// 2) 변수를 하나 더 선언하고 1(순서) 에서 선언한 변수와 **덧셈 대입**을 이용하여 '31' 이 할당되도록 코드를 작성합니다.
// 3) 변수를 하나 더 선언하고 1(순서) 에서 선언한 변수와 **나머지 연산 대입**을 이용해서 '2' 를 할당하도록 코드를 작성합니다.
// 4) 만약 2(순서) 에서 생성한 변수를 3(순서) 에서 선언한 변수로 나누었을때 나머지가 '1' 인 경우 '일치합니다.' 라는 문자열이 console 에 출력되도록 작성합니다.
var a = 29;  // 값이 29인 a 변수 선언
var b; // b 변수 선언
b = a +2; // 29+ 2 = 31
console.log(b); // 31
var c; // c 변수 선언
c = a % 9; // 29 / 9의 나머지 = 2
if (b % c == 1){ //b(31) 나누기 c(2)의 나머지가 1이면 consol 출력
  console.log("일치합니다.");
}

// ### Quest 2.
// 1) 알파벳 ‘a' 부터 'z' 까지 순서대로 console 에 출력되도록 반복문을 작성합니다.
var alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];
//배열의 크기 26, i = 0~25 
for( var i = 0; i < alphabet.length; i++){   // 배열의 크기 alphabet 길이 보다 작음. i 하나씩 증가 
  console.log(alphabet[i]); //var alphabet의 a~z까지 출력
}

// ### Quest 3.
// 1) 숫자 '1' 부터 '50' 까지 순서대로 console 에 출력되도록 반복문을 작성하고 출력 시 해당 값의 짝/홀수 여부를 함께 표시합니다.

// ```
// console 에 출력  예시 : 1은 홀수!
// ```
for(var i = 1; i <=50;i++){ //반복문 사용하여 1~50
  if(i % 2 == 0){ //i를 2로 나눴을 때 나머지 값이 0일 때 짝수
    console.log(i + "은 짝수!")
  } else { // 그 외에는 홀수
    console.log(i + "은 홀수!")
  }
}
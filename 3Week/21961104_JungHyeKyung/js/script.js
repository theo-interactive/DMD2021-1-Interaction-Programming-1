/*
문제 풀이.
*/

/*
Quest 1.
1. 변수를 선언하고 숫자 '29' 를 할당합니다.
2. 변수를 하나 더 선언하고 1(순서) 에서 선언한 변수와 **덧셈 대입**을 이용하여 '31' 이 할당되도록 코드를 작성합니다.
3. 변수를 하나 더 선언하고 1(순서) 에서 선언한 변수와 **나머지 연산 대입**을 이용해서 '2' 를 할당하도록 코드를 작성합니다.
4. 만약 2(순서) 에서 생성한 변수를 3(순서) 에서 선언한 변수로 나누었을때 나머지가 '1' 인 경우 '일치합니다.' 라는 문자열이 console 에 출력되도록 작성합니다.
*/
// Answer 1.

var a = 29;
var b;
b = 2;
b += a;
console.log('b += a: ' , b); // 31

var c;
c = 3;
// c %= a;
a %= c;
console.log('c %= a: ', a); // 2

b %= c;
console.log('b %= c: ', b);
if (b === 1) {
    console.log("일치합니다.");
} else {
    console.log("일치하지 않습니다.");
}

/*
Quest 2.
1. 알파벳 ‘a' 부터 'z' 까지 순서대로 console 에 출력되도록 반복문을 작성합니다.
*/
// Answer 2.

var _arr = ['a','b','c','d','e','f','g','h','i','j',
            'k','l','m','n','o','p','q','r','s','t',
            'u','v','w','x','y','z'];

for(var i = 0; i < _arr.length; i++){ // 배열 개수만큼 반복되게 만들었다
    console.log(_arr[i]);
}

/*
Quest 3.
1. 숫자 '1' 부터 '50' 까지 순서대로 console 에 출력되도록 반복문을 작성하고 출력 시 해당 값의 짝/홀수 여부를 함께 표시합니다.

----------
console 에 출력  예시 : 1은 홀수!
----------
*/
// Answer 3.
var num = 1;
for(var i = 0; i < 50; i++){ // 0 ~ 49 반복
    if(num % 2 != 0){ // 2로 나눈 나머지가 0이면 짝수
        console.log(num, '은 홀수');
    }
    else{ // 2로 나눈 나머지가 0이 아니면 홀수
        console.log(num, '은 짝수');
    }
    num++; // 1를 반복문이 돌 때마다 +1 해준다
}



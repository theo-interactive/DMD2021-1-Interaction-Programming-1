/*
문제 풀이.
*/

/*
Quest 1.
1. 변수를 선언하고 숫자 '29' 를 할당합니다.
2. 변수를 하나 더 선언하고 1(순서) 에서 선언한 변수와 **덧셈 대입**을 이용하여 '31' 이 할당되도록 코드를 작성합니다.
3. 변수를 하나 더 선언하고 1(순서) 에서 선언한 변수와 **나머지 연산 대입**을 이용해서 '2' 를 할당하도록 코드를 작성합니다.
4. 만약 2(순서) 에서 생성한 변수를 3(순서) 에서 선언한 변수로 나누었을때 나머지가 '1' 인 경우 '일치합니다.' 라는 문자열이 console 에 출력되도록 작성합니다.
*/

// Answer 1.
var a = 29; // 1단계 : 변수 선언 / int 29 할당
var b = a + 2; // 2단계 : 1단계 변수와 덧셈 대입으로 int 31 할당
var c = b - a; // 3단계 : 1단계 변수와 연산 대입으로 int 2 할당

if( b % c == 1){
    console.log("일치합니다."); // 4단계 : 2단계 변수 / 3단계 변수의 나머지가 1인 경우 '일치합니다' console에 출력
}



/*
Quest 2.
1. 알파벳 ‘a' 부터 'z' 까지 순서대로 console 에 출력되도록 반복문을 작성합니다.
*/

// Answer 2.
var i; // 순서를 집계할 변수
var alpha = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'n', 'm', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']; // 알파벳을 담아두는 변수
var _bet = ''; // 알파벳을 출력하기 위해 alpha 에서 알파벳을 받아오는 변수

for(i = 0; i < alpha.length; i++) // i가 0에서 alpha의 개수가 될 때까지 1을 더함
{
     _bet += alpha[i]; // _bet에 계속 i의 순서에 맞는 alpha를 더함
}

console.log(_bet);



/*
Quest 3.
1. 숫자 '1' 부터 '50' 까지 순서대로 console 에 출력되도록 반복문을 작성하고 출력 시 해당 값의 짝/홀수 여부를 함께 표시합니다.

----------
console 에 출력  예시 : 1은 홀수!
----------
*/

// Answer 3.
for(i = 1; i < 51; i++){
    var sum = i % 2; // 홀수/2의 나머지는 1, 짝수/2의 나머지는 0
    if(sum == 0){
        console.log(i + "은 짝수!");
    }
    else{
        console.log(i + "은 홀수!");
    }
}



console.log("외부 js 로드하겠습니다! 과제 제출문이에요!");

// # 3 WEEK

// 3주차 과제입니다.

// '학번_이름(반드시 영문으로 표기)' 폴더를 생성하고 '#homework' 폴더 내의 파일을 복사합니다.<br/>
// index.html 에는 js/script.js 경로의 파일이 로드되어 있습니다. js 파일에 아래 항목들을 수행합니다.


// ## 문제 풀이.






// ### Quest 1.


// 1) 변수를 선언하고 숫자 '29' 를 할당합니다.

var a = 29; // -> 해당 변수명을 a 로 설정하였습니다.

// 2) 변수를 하나 더 선언하고 1(순서) 에서 선언한 변수와 **덧셈 대입**을 이용하여 '31' 이 할당되도록 코드를 작성합니다.

var b = 2; // -> 해당 변수명을 b 로 설정하였고 대입 연산자(=)를 이용하여 숫자 2을 대입해줍니다. 변수 a의 값을 이용하여 31이라는 최종 값이 할당된 변수를 만들어주기 위함입니다. 
b += a; // -> 바로 덧셈 기호를 포괄한 대입 연산자 += 를 사용하여 변수 b에 할당되었던 값인 숫자 2에 변수 a의 값인 숫자 29를 추가로 더해줌으로써 변수 b는 최종적으로 '31' 이 할당이 완료됩니다. (b = b + a 또한 가능)

// 3) 변수를 하나 더 선언하고 1(순서) 에서 선언한 변수와 **나머지 연산 대입**을 이용해서 '2' 를 할당하도록 코드를 작성합니다.

var c = b % a // -> 해당 변수 명을 c로 설정합니다. 지금까지 변수 b의 최종 선언값은 31이며 나머지가 2로 남게끔 할당해줄려면 나눗셈을 할때 숫자 29로 대입되어 있는 a를 제수로 두어 모듈로 기호를 포괄한 대입 연산자 %= 를 사용하여 변수 b 에 할당되었던 값을 나누어주면 해당 연산에서 나머지 값으로 도출된 '2' 가 할당이 완료되어 변수 c에 대입됩니다. 

// 4) 만약 2(순서) 에서 생성한 변수를 3(순서) 에서 선언한 변수로 나누었을때 나머지가 '1' 인 경우 '일치합니다.' 라는 문자열이 console 에 출력되도록 작성합니다.


if (b % c === 1) { // -> 산술의 경우를 확인해보기 위해 if 조건문을 사용하여 계산하였으며, 일치 자체의 여부를 확인하기 때문에 ===(일치 연산자)를 사용하였습니다.
    console.log("일치합니다."); // -> if 조건절 내부에 console 개체의 log() 메서드 형식에 "일치합니다."라는 문자열를 써 줌으로써 console 창에 해당 문자열이 표시가 됩니다.
} 




// ### Quest 2.
// 1) 알파벳 ‘a' 부터 'z' 까지 순서대로 console 에 출력되도록 반복문을 작성합니다.

var _arr = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'] // -> 먼저 총 갯수 26가지의 알파벳들을 문자열로 하나씩 개체화가 되어 묶음으로 형성하게 할 변수를 정하도록 할텐데, 변수명은 저번 시간 강의때 배웠던대로 _arr를 그대로 변수명으로 채용하도록 하겠습니다. (왜냐면 배열이 영어로 Array이기 때문에!) 대괄호([])를 사용하여 대괄호 내부에 알파벳 하나하나씩 따옴표(')를 차용하여 쉼표로 띄우면서 그룹화를 이룬 알파벳 문자열들을 변수 _arr에 =(대입 연산자)를 이용하여 값을 기입해줍니다.
for(var i = 0; i < _arr.length; i++){ // -> 일단 알파벳들을 하나씩 console창에 표시되도록 하려면 반복문을 사용해야겠죠? 단순히 선언된 특정 조건에서만 반복을 실행하는 반복문 for를 사용하도록 하겠습니다. 그 다음, for 반복문의 밑바탕이 되어줄 값이 0으로 대입된 임의의 초기화 변수 i를 선언, 그다음엔 반복문 조건을 위하여 문자열의 길이를 측정해주는 속성 .length를 사용하도록 하며 위에 알파벳 문자열 객체들을 고루 갖춘 변수 _arr에 .length 속성을 접목하고 비교 연산자 <(또한 >도 가능)를 사용하여 초기화 변수를 왼쪽 피연산자로 두고 _arr.length를 오른쪽 피연산자로 두어 _arr의 객체 총 길이 수 보다 변수 i의 값이 작다는 조건을 설정, 그리고 나서 알파벳들을 하나씩 세도록 하는 명령을 실행하기 위해 초기화 변수 i에 1을 하나씩 증가시켜줄 증감 연산자인 ++를 변수 i에게 접목하여 0에서 부터 하나씩 증가시켜주면 비교 연산자를 이용한 조건하에 25까지로 세어지게 됩니다. 그리고 집단화 된 객체에서 처음 객체를 셀 때 그 배열의 순서를 숫자형으로 설정하면 '0'부터 시작하므로, 현재 실질적인 알파벳의 총 개수는 26가지 이지만 마지막 26번째 알파벳은 JS의 문법상에서 순서의 수치로 '25번째'로 인식이 됩니다. 그러므로 선언된 조건과 선언된 초기화 변수에 증감연산자를 접목한 것을 바라보아 계산해보면 모든 알파벳들을 불러올 수 있겠죠?
    console.log(_arr[i]); // -> console 개체의 log() 메서드 형식을 호출, 소괄호 내에 알파벳 객체들을 담고 있는 변수명 _arr을 작성하고 그 뒤에 대괄호([])를 작성, for 반복문에서 알파벳 객체들을 도출해내기 위해 선언되었던 변수 i를 대괄호([]) 내부에써 써줌으로써 console 창에 모든 알파벳 객체들의 문자열이 표시가 됩니다.
}



// ### Quest 3.
// 1) 숫자 '1' 부터 '50' 까지 순서대로 console 에 출력되도록 반복문을 작성하고 출력 시 해당 값의 짝/홀수 여부를 함께 표시합니다.

for(o = 1; o <= 50; o++){ // -> 일정 조건을 따르는 반복문 for을 호출, 숫자 1부터 50까지 세기 위해 일단 초기화 변수 o를 설정하여 1을 기입하고, 그 다음 1부터 50까지의 숫자를 정하기 위해 조건으로 비교 연산자(<=)를 이용하여 왼쪽 피연산자에는 o를 두고 오른쪽 피연산자에는 50을 두며, 그 다음 1부터 50까지 차례대로 숫자들을 검수하기 위해 숫자 1의 값을 대변하는 초기화 변수 i의 뒤에 ++(증감 연산자)를 이용하여 i++를 설정해둡니다.
    var sum = o % 2; // -> 그 다음엔 홀수와 짝수를 분별해내는 누적값(sum) 함수를 정의해볼려고 합니다. 홀수와 짝수의 분별법은 쉽게말해 홀수는 2로 나누었을때 나머지가 1이 남게되어 완전히 나누어 떨어지지 않는 수이며 짝수는 2로 나누었을때 나머지가 0이 남게되어 완전히 나누어 떨어지지 않은 수 이겠죠? 그러므로 계산을 할 때 용이하게 쓰이는 함수 sum을 작성하여 변수로 정의한 후 객체 50까지 도달할때까지 1씩 증감되는 변수 o을 피제수로 두고 나눗셈을 하여 나머지를 도출해내는 모듈로(%)를 사용, 숫자 2를 제수로 두어 값을 선언한 후 =(대입 연산자)를 이용하여 값을 대입해줍니다.
    if(sum == 0){  // ->  if 조건문을 호출, 단순히 값만 비교하는 동등 비교 연산자인 ==를 사용하여 변수 sum을 왼쪽 피연산자로 두고 숫자 0을 오른쪽 피연산자로 두어 변수 o의 나머지 값을 대신하는 변수 sum의 값이 과연 0과 동등하여 짝수로 판명되는지, 아니면 동등하지 않아 홀수로 판명되는지 알아볼려고 합니다. 일단 여기서 비교시에 0과 동일하다는 true의 값들만 해당되기 때문에 짝수에 해당하는 수들에 대한 결과들만 console창에 호출하기 위해 조건 정의가 되는 것이겠죠?
        console.log(o + "은 짝수!"); // -> console 개체의 log() 메서드 형식을 호출, 소괄호 내에 변수 o을 두고 그 다음에 산술 연산자인 +를 둔 다음"은 짝수!"라는 문자열을 이어 두어서 위의 if 조건절의 비교에 true값으로 판정되는 변수 o의 각 증감 수들만 불러오게 되고 각 숫자들의 뒤에는 짝수라는 결과 알림 문장들을 이어서 console 창에는 짝수들과 짝수 판정의 메세지들이 뒤이어 도출되게 됩니다.
    }
    else{ // -> 그리고 짝수 이외의 false로 판정된 나머지 수들은 전부 홀수들이겠지요? 그 외의 경우를 전부 호출하기 위해 else문을 호출하도록 합니다.
        console.log(o + "은 홀수!"); // -> console 개체의 log() 메서드 형식을 호출, 소괄호 내에 변수 o을 두고 그 다음에 산술 연산자인 +를 둔 다음"은 홀수!"라는 문자열을 이어 두어서 위의 if 조건절의 비교에 false값으로 판정되는 변수 o의 각 증감 수들만 불러오게 되고 각 숫자들의 뒤에는 홀수라는 결과 알림 문장들을 이어서 console 창에는 홀수들과 홀수 판정의 메세지들이 뒤이어 도출되게 됩니다.
    }
}


/*
```
console 에 출력  예시 : 1은 홀수!
```
*/ // -> 사실 "은(는) 홀수/짝수입니다."라는 메세지로 작성할려고 했으나 문자열 예시가 이미 있어서 뒤늦게 수정하겠습니다. ^^;

/*
## 제출기한

3월 24일 (수) 23:00 까지 업로드
*/